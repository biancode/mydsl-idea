println('''
ooooo  oooo                               ooooooooo    oooooooo8 ooooo
  888  88 ooooooo  oooo  oooo  oo oooooo   888    88o 888         888
    888 888     888 888   888   888    888 888    888  888oooooo  888
    888 888     888 888   888   888        888    888         888 888      o
   o888o  88ooo88    888o88 8o o888o      o888ooo88   o88oooo888 o888ooooo88
------------------------------------------------------------------------------
''')

dependencies {
	testCompile "org.eclipse.xtext:org.eclipse.xtext.junit4:${xtextVersion}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.junit:${xtextVersion}"

	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
}
configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/resources/org/xtext/example/yourdsl/GenerateYourDsl.mwe2"
	inputs.file "src/main/resources/org/xtext/example/yourdsl/YourDsl.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/resources/org/xtext/example/yourdsl/GenerateYourDsl.mwe2"
	args += "-p"
	args += "projectPath=/${projectDir}"
}

compileXtend.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]

jar {
	from('model/generated') {
		into('model/generated')
	}
}
