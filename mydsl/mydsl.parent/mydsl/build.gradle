println('''
oooo     oooo           ooooooooo    oooooooo8 ooooo
 8888o   888 oooo   oooo 888    88o 888         888
 88 888o8 88  888   888  888    888  888oooooo  888
 88  888  88   888 888   888    888         888 888      o
o88o  8  o88o    8888   o888ooo88   o88oooo888 o888ooooo88
              o8o888
------------------------------------------------------------------------------
''')

dependencies {
	testCompile "org.eclipse.xtext:org.eclipse.xtext.junit4:${xtextVersion}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.junit:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
}
configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/resources/org/xtext/example/mydsl/GenerateMyDsl.mwe2"
	inputs.file "src/main/resources/org/xtext/example/mydsl/MyDsl.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/resources/org/xtext/example/mydsl/GenerateMyDsl.mwe2"
	args += "-p"
	args += "projectPath=/${projectDir}"
}

compileXtend.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]

jar {
	from('model/generated') {
		into('model/generated')
	}
}

clean {
	delete 'model'

	delete 'src/main/xtext-gen'
	delete 'src/main/xtend-gen'
	delete 'src/main/java-gen'

	delete 'src/test/xtext-gen'
	delete 'src/test/xtend-gen'
	delete 'src/test/java-gen'
}
